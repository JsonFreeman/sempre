(rule $ROOT (if $SENTENCE , then $SENTENCE .) (lambda x (lambda y (call + (var x) (string " & ~") (var y)))))

(rule $SENTENCE ($SENTENCE and $SENTENCE) (lambda x (lambda y (call + (var x) (string " & ") (var y)))))
(rule $SENTENCE ($FIELD is greater than $FIELD) (lambda x (lambda y (call + (string "greater_than(") (var x) (string ", ") (var y) (string ")")))))
(rule $SENTENCE ($FIELD has a non zero value) (lambda x (call + (string "non_zero(") (var x) (string ")"))))
(rule $SENTENCE ($FIELD must have a non zero value) (lambda x (call + (string "non_zero(") (var x) (string ")"))))


(rule $FIELD (form $TOKEN , line $TOKEN ` $TOKEN ') (lambda x (lambda y (lambda z (var z)))))
(rule $FIELD (line $TOKEN ` $TOKEN ') (lambda y (lambda z (var z))))
